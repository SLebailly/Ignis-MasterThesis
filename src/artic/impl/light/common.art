fn @make_null_light() = Light {
    sample_direct   = @ |_, _| undef[DirectLightSample](),
    sample_emission = @ |_| undef[EmissionSample](),
    emission = @ |_, _| make_emission_value(color_builtins::black, 1, 1),
    delta    = true,
    infinite = true
};

//-------------------------------------------
fn @make_directional_light(dir: Vec3, scene_bbox: BBox, color: Color) -> Light {
    let scene_radius = bbox_radius(scene_bbox) * 1.01;

    Light {
        sample_direct = @ |_, _| {
            make_direct_sample(vec3_neg(dir), color, 1, 1, 1)
        },
        sample_emission = @ |rnd| {
            let (pos, pos_pdf) = env_sample_pos(rnd, vec3_neg(dir), bbox_center(scene_bbox), scene_radius);
            make_emission_sample(pos, dir, color, pos_pdf, 1, 1)
        },
        emission = @ |_, _| make_emission_value(color_builtins::black, 1, 1),
        delta    = true,
        infinite = true
    }
}
