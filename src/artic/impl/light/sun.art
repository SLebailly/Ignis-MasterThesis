fn @make_sun_light(dir: Vec3, scene_bbox: BBox, sun_radius: f32, color: Color) -> Light {
    let scene_radius = bbox_radius(scene_bbox) * 1.01;
    Light {
        sample_direct = @ |rnd, _| {
            let sample = sample_uniform_disk(randf(rnd), randf(rnd), sun_radius);
            let ndir   = vec3_normalize(mat3x3_mul(make_orthonormal_mat3x3(dir), vec3_add(sample.pos, make_vec3(0,0,1))));
            make_direct_sample(vec3_neg(ndir), color, 1.0, sample.pdf, 1.0)
        },
        sample_emission = @ |rnd| {
            let sample         = sample_uniform_disk(randf(rnd), randf(rnd), sun_radius);
            let ndir           = vec3_normalize(mat3x3_mul(make_orthonormal_mat3x3(dir), vec3_add(sample.pos, make_vec3(0,0,1))));
            let (pos, pos_pdf) = env_sample_pos(rnd, vec3_neg(ndir), bbox_center(scene_bbox), scene_radius);
            make_emission_sample(pos, ndir, color, pos_pdf, sample.pdf, 1.0)
        },
        emission = @ |_, _| make_emission_value(color_builtins::black, 1, 1),
        delta    = true,
        infinite = true
    }
}
