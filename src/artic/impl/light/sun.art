fn @make_sun_light(dir: Vec3, max_radius: f32, sun_radius: f32, color: Color) = Light {
    sample_direct = @ |rnd, _| {
        let u = randf(rnd);
        let v = randf(rnd);
        let sample = sample_uniform_disk(u, v, sun_radius);
        let ndir = vec3_normalize(mat3x3_mul(make_orthonormal_mat3x3(dir), sample.pos));
        make_direct_sample(ndir, color, 1.0, sample.pdf, 1.0)
    },
    sample_emission = @ |rnd| {
        let u = randf(rnd);
        let v = randf(rnd);
        let sample = sample_uniform_disk(u, v, sun_radius);
        let ndir = vec3_normalize(mat3x3_mul(make_orthonormal_mat3x3(dir), sample.pos));
        make_emission_sample(vec3_mulf(dir, max_radius), ndir, color, 1.0, sample.pdf, 1.0)
    },
    emission = @ |_, _| make_emission_value(black, 1, 1),
    delta    = true,
    infinite = true
};

