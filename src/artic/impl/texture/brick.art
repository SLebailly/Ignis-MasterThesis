fn @make_brick_texture(color0: Color, color1: Color, scale: Vec2, gap_size: Vec2, transform: Mat3x3) -> Texture {
    @ |uv| {
        let fract = @|x: f32| x - math_builtins::floor(x);
        let step  = @|edge: f32, x: f32| select(x < edge, 0:f32, 1:f32);
        
        let uv2 = mat3x3_transform_point_affine(transform, uv); 
        let suv = vec2_mul(uv2, scale); 
        
        let x = fract(select(fract(suv.y * 0.5) > 0.5, suv.x + 0.5, suv.x));
        let y = fract(suv.y);

        let bx = step(x, 1 - gap_size.x);
        let by = step(y, 1 - gap_size.y);

        color_lerp(color0, color1, bx * by)
    }
}