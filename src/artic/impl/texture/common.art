fn @make_constant_texture(color: Color) -> Texture {
    @ |_uv| { color }
}

fn @make_channel_texture(tex: Texture, channel: i32) -> Texture {
    @ |uv| { 
        let color = tex(uv);
        match(channel) {
            0 => make_gray_color(color.r),
            1 => make_gray_color(color.g),
            _ => make_gray_color(color.b),
        }
    }
}

fn @make_transform_texture(tex: Texture, transform: Mat3x3) -> Texture {
    @ |uv| { tex(mat3x3_transform_point_affine(transform, uv)) }
}

fn @make_black_texture() -> Texture {
    @ |_uv| { color_builtins::black }
}

fn @make_invalid_texture() -> Texture {
    @ |_uv| { color_builtins::pink }
}