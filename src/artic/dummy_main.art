// Dummy file used to generate a C interface for the renderer
#[export]
fn _dummy1(_tri1: &[Tri1], _tri4: &[Tri4]) -> () {
}

#[export]
fn ig_render(_settings: &Settings, _iter: i32) -> () {
    // Force the export of the primary and secondary stream types
    let mut primary : PrimaryStream;
    let mut secondary : SecondaryStream;
    ignis_cpu_get_primary_stream(&mut primary, 0);
    ignis_cpu_get_secondary_stream(&mut secondary, 0);

    // Force the export of BVH types
    let mut node2 : &[Node2];
    let mut node4 : &[Node4];
    let mut node8 : &[Node8];
    let mut entityleaf : &[EntityLeaf1];
    
    ignis_load_bvh2_ent(0, &mut node2, &mut entityleaf);
    ignis_load_bvh4_ent(0, &mut node4, &mut entityleaf);
    ignis_load_bvh8_ent(0, &mut node8, &mut entityleaf);

    // Force the export of the CDF types
    /*let mut cdf1 : CDF1D;
    let mut cdf2 : CDF2D;
    ignis_load_cdf1d(0, "", &mut cdf1);
    ignis_load_cdf2d(0, "", &mut cdf2);

    // Force the export of the klems model
    let mut klems : KlemsModel;
    ignis_load_klems(0, "", &mut klems);*/

    // Force the export
    let mut dtb : SceneDatabase;
    ignis_load_scene(0, &mut dtb);

    let mut info : SceneInfo;
    ignis_load_scene_info(0, &mut info);

    let mut rays : &[Ray];
    ignis_load_rays(0, &mut rays); 
}
