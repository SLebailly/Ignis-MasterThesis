struct PathTracer {
    on_hit:    fn (Ray, Hit, RayPayload, SurfaceElement, Material) -> Option[Color],
    on_miss:   fn (Ray, RayPayload) -> Option[Color],
    on_shadow: fn (Ray, Hit, &mut RndState, RayPayload, SurfaceElement, Material) -> Option[(Ray, Color)],
    on_bounce: fn (Ray, Hit, &mut RndState, RayPayload, SurfaceElement, Material) -> Option[(Ray, RayPayload)],
}

type RayEmitter = fn (i32, i32, i32, i32, i32) -> (Ray, RndState, RayPayload);

static MaxRayPayloadComponents = 8;
struct RayPayload {
    components: [f32*8]
}

// fn make_empty_payload() = RayPayload {
//     components = [0,0,0,0,0,0,0,0]
// };

fn make_empty_payload() = undef[RayPayload]();