struct PathTracer {
    on_hit:    fn (Ray, Hit, &mut RayState, SurfaceElement, Material) -> Option[Color],
    on_miss:   fn (Ray, &mut RayState) -> Option[Color],
    on_shadow: fn (Ray, Hit, &mut RayState, SurfaceElement, Material) -> Option[(Ray, Color)],
    on_bounce: fn (Ray, Hit, &mut RayState, SurfaceElement, Material) -> Option[(Ray, RayState)],
}

struct RayState {
    rnd:     RndState,
    contrib: Color,
    mis:     f32,
    depth:   i32
}

type RayEmitter = fn (i32, i32, i32, i32, i32) -> (Ray, RayState);

fn @make_ray_state(rnd: RndState, contrib: Color, mis: f32, depth: i32) -> RayState {
    RayState {
        rnd     = rnd,
        contrib = contrib,
        mis     = mis,
        depth   = depth
    }
}
