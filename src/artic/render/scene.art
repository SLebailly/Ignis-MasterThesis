// Scene data
struct SceneInfo {
    num_entities:  i32,
    num_materials: i32
}

struct Scene {
    info:     SceneInfo,
    database: SceneAccessor,
}

struct SceneGeometry {
    info:     SceneInfo,
    database: TraceAccessor,
    bvh:      SceneBvh
}

// Used as interface
struct ShadingContext {
    ray:  Ray,
    hit:  Hit,
    surf: SurfaceElement,
    uvw:  Vec3
}

fn @make_surface_shading_context(ray: Ray, hit: Hit, surf: SurfaceElement) = ShadingContext {
    ray  = ray,
    hit  = hit,
    surf = surf,
    uvw  = vec2_to_3(surf.tex_coords, 0)
};

type BSDFShader     = fn (ShadingContext) -> Bsdf;
type MaterialShader = fn (ShadingContext) -> Material;
