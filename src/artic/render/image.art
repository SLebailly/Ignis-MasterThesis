// Images are discrete collections of pixels with a fixed number of channels
struct Image {
    pixels:   fn (i32, i32) -> Color,
    width:    i32,
    height:   i32
}

fn @make_image(pixels: fn (i32, i32) -> Color, width: i32, height: i32) = Image {
    pixels = pixels,
    width  = width,
    height = height
};

fn @load_image_from_buffer(bufferID: i32, tbl: BufferTable) -> Image {
    let (_, data)       = tbl(bufferID);
    let (width, height) = data.load_int2(0);
    
    make_image(@|x, y| vec3_to_color(data.load_vec3(4 + 4 * (y * width + x))), width, height)
}
